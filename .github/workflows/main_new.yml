# 这是设置 Jekyll + GitHub Pages 构建和部署的 GitHub Actions 工作流
# 这个工作流会在推送到 master 分支时自动运行

name: Build and Deploy Jekyll to GitHub Pages # 工作流的名称

on:
  # 当推送到 master 分支时触发工作流
  push:
    branches:
      - master # 请确保这里的分支名与您的主分支一致，您的仓库似乎是 master

  # 也可以手动触发工作流（在 Actions 页面点击 'Run workflow'）
  workflow_dispatch:

# 设置环境变量，特别是 JEKYLL_ENV，以便 Jekyll 知道它正在构建生产版本
env:
  JEKYLL_ENV: production
  BUNDLE_FORCE_RUBY_PLATFORM: true # 解决某些 gem 的平台问题

jobs:
  build:
    runs-on: ubuntu-latest # 在 Ubuntu 系统上运行这个任务

    steps:
      - name: Checkout code # 步骤名称：检出代码
        uses: actions/checkout@v4 # 使用 actions/checkout Action 来获取您的代码

      - name: Setup Ruby # 步骤名称：设置 Ruby 环境
        uses: ruby/setup-ruby@v1 # 使用 ruby/setup-ruby Action 来安装和设置 Ruby
        with:
          ruby-version: '3.1' # 指定 Ruby 版本。您可以根据您的 Gemfile.lock 或需求选择一个兼容的版本，3.1 是一个常用且兼容的版本。
          bundler-cache: true # 使用 bundler-cache 来缓存 Gem 依赖，加快后续构建速度

      - name: Install Dependencies # 步骤名称：安装 Gem 依赖
        run: bundle install # 运行 bundle install 来安装 Gemfile 中指定的 Gems

      - name: Build Jekyll site # 步骤名称：构建 Jekyll 网站
        # 运行 bundle exec jekyll build 命令。--destination 参数指定输出目录为 _site。
        # --future 允许构建包含未来日期的文章（如果您的博客有的话）。
        # --verbose 可以提供更详细的构建信息（用于调试）。
        # --trace 可以显示更详细的错误堆栈（用于调试）。
        run: bundle exec jekyll build --destination _site # 构建命令

      - name: Upload artifact for deployment # 步骤名称：上传构建产物（用于部署）
        # 使用 actions/upload-pages-artifact@v3 Action 上传构建好的 _site 目录
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site # 指定要上传的目录，Jekyll 默认构建到 _site 目录

  deploy:
    # 部署步骤，需要依赖前面的 build 步骤成功完成
    environment:
      name: github-pages # 指定部署到 github-pages 环境
      url: ${{ steps.deployment.outputs.page_url }} # 设置部署环境的 URL

    runs-on: ubuntu-latest # 部署任务也在 Ubuntu 上运行

    needs: build # 这个任务依赖于 'build' 任务，只有 build 成功后才会运行

    permissions:
      pages: write # 赋予 GITHUB_TOKEN 写权限，用于发布到 GitHub Pages
      id-token: write # 赋予 GITHUB_TOKEN 写权限，用于 OIDC 认证

    steps:
      - name: Deploy to GitHub Pages # 步骤名称：部署到 GitHub Pages
        id: deployment # 为这个步骤指定一个 id，以便在 environment url 中引用它的输出
        uses: actions/deploy-pages@v4 # 使用 actions/deploy-pages@v4 Action 来部署上传的 artifact
